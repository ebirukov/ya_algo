package lesson1

import "fmt"

// Имеется N кг металлического сплава. Из него изготавливают заготовки массой K
// кг каждая. После этого из каждой заготовки вытачиваются детали массой M кг
// каждая (из каждой заготовки вытачивают максимально возможное количество
// деталей). Если от заготовок после этого что-то остается, то этот материал
// возвращают к началу производственного цикла и сплавляют с тем, что осталось
// при изготовлении заготовок. Если того сплава, который получился, достаточно
// для изготовления хотя бы одной заготовки, то из него снова изготавливают
// заготовки, из них – детали и т.д. Напишите программу, которая вычислит, какое
// количество деталей может быть получено по этой технологии из имеющихся исходно
// N кг сплава.

func PartManufacturing() {
	in := make([]int, 3)
	for i := range in {
		_, err := fmt.Scan(&in[i])
		if err != nil {
			panic(err.Error())
		}
	}
	res := calcNumOfParts(in[0], in[1], in[2])
	fmt.Printf("%d", res)
}

func calcNumOfParts(n, k, m int) int {
	if n <= 0 || k <= 0 || m <= 0 || n < k || k < m {
		return 0
	}
	numOfParts := (n / k) * (k / m)
	rest := n
	for rest%k+(rest/k)*(k%m) >= k {
		rest = rest%k + (rest/k)*(k%m)
		numOfParts += (rest / k) * (k / m)
	}
	return numOfParts
}
